//------------------------------------//
//  $FORMS
//------------------------------------//

form { margin: 0; }

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
}

legend {
  display: block;
  width: 100%;
}

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] { @include box-sizing(border-box); }

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9; /* IE8-9 */
  line-height: normal;
}

// Set the size of file controls to match text inputs
// Make range inputs behave like textual form controls
input[type="file"],
input[type="range"] {
  display: block;
  width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] { height: auto; }

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus { @include tab-focus; }


// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]
.form-control {
  display: block;
  width: 100%;
  height: 2.5em;
  padding: .2em 1em;
  font-family: $font-body;
  @include rem(font-size, 1);
  color: $gray-dark;
  vertical-align: middle;
  background-color: $white;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid $gray;
  @include border-radius(0);
  @include transition(border-color ease-in-out .15s);

  // Customize the `:focus` state to imitate native WebKit styles
  @include form-control-focus;

  // Placeholder
  @include placeholder { color: $primary; }

  // Disabled and read-only inputs
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    cursor: not-allowed;
    background-color: $gray-light;
  }
}

// Reset height for `textarea`s
textarea.form-control {
  height: auto;
  line-height: $line-height-ratio;
}

// Remove inner shadow on webkit, see http://zomigi.com/blog/bug-fixes-for-removing-the-inner-shadow-on-ios-inputs
input.form-control,
textarea.form-control {
  background-image: -webkit-linear-gradient(hsla(0, 0%, 100%, 0), hsla(0, 0%, 100%, 0));
}


// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls
.radio,
.checkbox {
  display: block;
  min-height: $base-line-height; // clear the floating input if there is no label text
  margin-top: 10px;
  margin-bottom: 10px;
  padding-left: 20px;
  vertical-align: middle;

  label {
    display: inline;
    cursor: pointer;
  }
}

.radio input[type="radio"],
.checkbox input[type="checkbox"] {
  float: left;
  margin-left: -20px;
}

// Disabled inputs
input[type="radio"],
input[type="checkbox"],
.radio,
.checkbox {
  &[disabled],
  fieldset[disabled] & { cursor: not-allowed; }
}

// Form control validation states
.has-error {
  @include form-control-validation($state-error, darken($state-error, 5%));
}

.has-success {
  @include form-control-validation($state-success, darken($state-success, 5%));
}
