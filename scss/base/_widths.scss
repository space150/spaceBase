//------------------------------------//
//  $WIDTHS
//------------------------------------//
@use "sass:math";
@use "sass:string";
@use "sass:list";
@use "../vars" as *;
@use "../base/mixins" as *;

$grid-widths: (
  1:     one-whole,

  math.div(1, 2):   one-half
                    two-quarters
                    three-sixths
                    four-eighths
                    five-tenths
                    six-twelfths,

  math.div(1, 3):   one-third
                    two-sixths
                    four-twelfths,

  math.div(2, 3):   two-thirds
                    four-sixths
                    eight-twelfths,

  math.div(1, 4):   one-quarter
                    two-eighths
                    three-twelfths,

  math.div(3, 4):   three-quarters
                    six-eighths
                    nine-twelfths,

  math.div(1, 5):   one-fifth
                    two-tenths,

  math.div(2, 5):   two-fifths
                    four-tenths,

  math.div(3, 5):   three-fifths
                    six-tenths,

  math.div(4, 5):   four-fifths
                    eight-tenths,

  math.div(1, 6):   one-sixth
                    two-twelfths,

  math.div(5, 6):   five-sixths
                    ten-twelfths,

  // Eighths
  math.div(1, 8):   one-eighth,
  math.div(3, 8):   three-eighths,
  math.div(5, 8):   five-eighths,
  math.div(7, 8):   seven-eighths,

  // Tenths
  math.div(1, 10):  one-tenth,
  math.div(3, 10):  three-tenths,
  math.div(7, 10):  seven-tenths,
  math.div(9, 10):  nine-tenths,

  // Twelfths
  math.div(1, 12):  one-twelfth,
  math.div(5, 12):  five-twelfths,
  math.div(7, 12):  seven-twelfths,
  math.div(11, 12): eleven-twelfths
);

@mixin grid-setup($namespace: "", $property: width) {
  @each $fraction, $widths in $grid-widths {
    $selectors: null;
    $percent: $fraction * 100%;
    @each $width in $widths {
      $selectors: list.append($selectors, string.unquote(".#{$namespace}#{$width}"), "comma");
    }
    #{$selectors} { #{$property}: $percent !important; }
  }
}

//
// Responsive widths w/breakpoint namespace
//
// If you have set `$responsive` to ‘true’ in `_vars.scss` then you can define at
// which breakpoint you’d like an element to be a certain size, e.g.:
//
// <div class="g one-half lap-one-third desk-one-quarter"> ... </div>
//
// This would create a div that, at mobile sizes, takes up half of the horizontal
// space, a third of the space at laptop sizes, and a quarter at desktop sizes.
//
// If `$responsive` is ‘false’ then the grid would only be used at laptop sizes and above.
//

@if $responsive {
  @include grid-setup;

  @each $breakpoint, $_ in $media-breakpoints {
    @include media($from: $breakpoint) { @include grid-setup("#{$breakpoint}-"); }
  }
} @else { // Not responsive
  // Initializes widths w/o namespace
  @include media($from: lap) { @include grid-setup; }
}
